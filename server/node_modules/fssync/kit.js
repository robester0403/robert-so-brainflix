'use strict';
/* --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- */

/**
 * 把路径转换成unix like style
 * @param {string} path
 * @param {~boolean} [isDir = false]
 * @return {string}
 */
function toUnixPath(path, isDir){
	path = path.replace(/\\/g, '/').replace(/\/{2,}/g, '/');
	path += !isDir ? '' : path.slice(-1) === '/' ? '' : '/';
	return path;
}


function extname(name){
	var ext = name.match(/(?!^)(\.[a-zA-Z0-9]*)$/);
	return !ext ? '' : ext[1];
}


/**
 * 获取路径的所有父路径 - /a/b/c -> ["/", "/a/", "/a/b/", "/a/b/c/"]
 * @param {string} path
 * @return {array<string>}
 */
function getPaths(path){
	let list = path.split(/\\|\//);
	let paths = [];
	list.forEach((path, i)=>{
		if(i === list.length - 1 && path === '') return ;
		path = list.slice(0, i + 1).join('/') + '/';
		paths.push(path);
	});
	return paths;
}


module.exports = {
	toUnixPath: toUnixPath,
	extname: extname,
	getPaths: getPaths
};

/*!codes: toUnixPath, extname, getPaths */